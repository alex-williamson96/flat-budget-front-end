import type { QueryClient, UseMutationOptions } from '@tanstack/react-query';
import type { CompatibleWithV4, MutationHook, MutationHookOptions } from './types';
export interface CreateMutationOptions<TData, TError, TVariables, TContext> extends UseMutationOptions<TData, TError, TVariables, TContext> {
    useDefaultOptions?: () => MutationHookOptions<TData, TError, TVariables, TContext>;
}
export declare function createMutation<TData = unknown, TVariables = void, TError = unknown, TContext = unknown>({ useDefaultOptions, ...defaultOptions }: CreateMutationOptions<TData, TError, TVariables, TContext>, queryClient?: CompatibleWithV4<QueryClient, void>): MutationHook<TData, TError, TVariables>;
