{"version":3,"file":"createInfiniteQuery.js","sources":["../../src/createInfiniteQuery.ts"],"sourcesContent":["import type { QueryClient } from '@tanstack/react-query'\nimport { useInfiniteQuery } from '@tanstack/react-query'\nimport { createBaseQuery } from './createBaseQuery'\nimport type {\n  AdditionalCreateOptions,\n  CompatibleUseInfiniteQueryOptions,\n  CompatibleWithV4,\n  InfiniteQueryHook,\n  InfiniteQueryHookOptions,\n} from './types'\n\nexport interface CreateInfiniteQueryOptions<\n  TFnData,\n  TVariables = any,\n  Error = unknown,\n  TPageParam = number\n> extends Omit<\n      CompatibleUseInfiniteQueryOptions<TFnData, TVariables, Error, TPageParam>,\n      'queryKey' | 'queryFn' | 'enabled' | 'select'\n    >,\n    AdditionalCreateOptions<TFnData, TVariables, TPageParam> {}\n\nexport function createInfiniteQuery<\n  TFnData,\n  TVariables = any,\n  Error = unknown,\n  TPageParam = number\n>(\n  options: CreateInfiniteQueryOptions<\n    TFnData,\n    TVariables,\n    Error,\n    TPageParam\n  > & {\n    useDefaultOptions: () => Omit<\n      InfiniteQueryHookOptions<\n        TFnData,\n        Error,\n        TVariables,\n        TVariables,\n        TPageParam\n      >,\n      'select'\n    > & { variables: TVariables }\n  },\n  queryClient?: CompatibleWithV4<QueryClient, void>\n): InfiniteQueryHook<TFnData, TVariables, Error, TPageParam, TVariables | void>\n\nexport function createInfiniteQuery<\n  TFnData,\n  TVariables = any,\n  Error = unknown,\n  TPageParam = number\n>(\n  options: CreateInfiniteQueryOptions<\n    TFnData,\n    TVariables,\n    Error,\n    TPageParam\n  > & {\n    useDefaultOptions: () => Omit<\n      InfiniteQueryHookOptions<\n        TFnData,\n        Error,\n        TVariables,\n        TPageParam,\n        TVariables\n      >,\n      'select' | 'variables'\n    >\n  },\n  queryClient?: CompatibleWithV4<QueryClient, void>\n): InfiniteQueryHook<TFnData, TVariables, Error, TPageParam, TVariables>\n\nexport function createInfiniteQuery<\n  TFnData,\n  TVariables = any,\n  Error = unknown,\n  TPageParam = number\n>(\n  options: CreateInfiniteQueryOptions<TFnData, TVariables, Error, TPageParam>,\n  queryClient?: CompatibleWithV4<QueryClient, void>\n): InfiniteQueryHook<TFnData, TVariables, Error, TPageParam, TVariables>\n\nexport function createInfiniteQuery(options: any, queryClient?: any) {\n  return createBaseQuery(options, useInfiniteQuery, queryClient)\n}\n"],"names":["createInfiniteQuery","options","queryClient","createBaseQuery","useInfiniteQuery"],"mappings":";;;;;;;AAoFO,SAASA,mBAAT,CAA6BC,OAA7B,EAA2CC,WAA3C,EAA8D;AACnE,EAAA,OAAOC,+BAAe,CAACF,OAAD,EAAUG,2BAAV,EAA4BF,WAA5B,CAAtB,CAAA;AACD;;;;"}